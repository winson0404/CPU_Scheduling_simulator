{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/skessler/Programming/CPU_Scheduling_simulator/cpu-scheduling-simulator/src/components/Form/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Typography, Container, TextField, Button, IconButton } from \"@material-ui/core\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport useStyles from \"./styles\";\nimport { map } from \"lodash\";\nimport { Formik, Form, FieldArray, getIn, Field } from \"formik\";\nimport * as yup from \"yup\";\nconst validationSchema = yup.object({\n  processes: yup.array().of(yup.object().shape({\n    burstTime: yup.string().required(\"Required field!\"),\n    arrivalTime: yup.string().required(\"Required field!\"),\n    priority: yup.string().required(\"Required field!\")\n  }))\n});\n\nconst Input = ({\n  field,\n  label,\n  form: {\n    errors\n  }\n}) => {\n  const errorMessage = getIn(errors, field === null || field === void 0 ? void 0 : field.name);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, { ...field,\n      label: label,\n      variant: \"filled\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\",\n        paddingLeft: \"10px\"\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Input;\n\nconst Forms = props => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    initialInputField,\n    handleSubmitForm\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      align: \"left\",\n      color: \"textSecondary\",\n      component: \"p\",\n      children: \"Enter processes below:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialInputField,\n      onSubmit: data => handleSubmitForm(data),\n      validationSchema: validationSchema,\n      children: ({\n        values,\n        handleSubmit,\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.root,\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            name: \"quantumValue\",\n            component: Input,\n            label: \"Quantum\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(FieldArray, {\n          name: \"processes\",\n          children: ({\n            push,\n            remove\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => push({\n                process: \"\",\n                burstTime: \"\",\n                arrivalTime: \"\",\n                priority: \"0\"\n              }),\n              className: classes.generateButton,\n              variant: \"outlined\" // disabled={isSubmitting}\n              ,\n              children: \"Add Process\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.root,\n              children: map(values.processes, (data, index) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.formContainer,\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: [\"P\", index, \": \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 14\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    label: \"Burst Time\",\n                    name: `processes[${index}].burstTime`,\n                    component: Input\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 14\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    label: \"Arrival Time\",\n                    name: `processes[${index}].arrivalTime`,\n                    component: Input\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 14\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    label: \"Priority\",\n                    name: `processes[${index}].priority`,\n                    component: Input\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 14\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => remove(index),\n                    children: /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 15\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 14\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 13\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.generateButton,\n          variant: \"outlined\",\n          type: \"submit\" // disabled={isSubmitting}\n          ,\n          children: \"Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Forms, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = Forms;\nexport default Forms;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"Forms\");","map":{"version":3,"sources":["/home/skessler/Programming/CPU_Scheduling_simulator/cpu-scheduling-simulator/src/components/Form/index.tsx"],"names":["React","Typography","Container","TextField","Button","IconButton","RemoveIcon","useStyles","map","Formik","Form","FieldArray","getIn","Field","yup","validationSchema","object","processes","array","of","shape","burstTime","string","required","arrivalTime","priority","Input","field","label","form","errors","errorMessage","name","color","paddingLeft","Forms","props","classes","initialInputField","handleSubmitForm","data","values","handleSubmit","isSubmitting","root","push","remove","process","generateButton","index","formContainer"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n\tTypography,\n\tContainer,\n\tTextField,\n\tButton,\n\tIconButton,\n} from \"@material-ui/core\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { FormInput } from \"../../types\";\nimport useStyles from \"./styles\";\nimport { map } from \"lodash\";\nimport { Formik, Form, FieldArray, FieldProps, getIn, Field } from \"formik\";\nimport * as yup from \"yup\";\n\nconst validationSchema = yup.object({\n\tprocesses: yup\n\t\t.array()\n\t\t.of(yup.object().shape({ \n\t\t\tburstTime: yup.string().required(\"Required field!\") ,\n\t\t\tarrivalTime: yup.string().required(\"Required field!\"),\n\t\t\tpriority: yup.string().required(\"Required field!\"),\n\t\t})),\n});\n\ninterface Props {\n\tinputField?: any;\n\tinitialInputField?: any;\n\thandleChangeInput?: any;\n\thandleSubmitForm?: any;\n\thandleAddFields?: any;\n\thandldeRemoveField?: any;\n}\n\nconst Input = ({ field, label, form: { errors } }: any) => {\n\tconst errorMessage = getIn(errors, field?.name);\n\n\treturn (\n\t\t<div>\n\t\t\t<TextField {...field} label={label} variant=\"filled\"/>\n\t\t\t{errorMessage && <div style={{ color: \"red\", paddingLeft:\"10px\"}}>{errorMessage}</div>}\n\t\t</div>\n\t);\n};\n\nconst Forms: React.FC<Props> = (props) => {\n\tconst classes = useStyles();\n\tconst { initialInputField, handleSubmitForm } = props;\n\treturn (\n\t\t<Container>\n\t\t\t<Typography variant=\"h5\" align=\"left\" color=\"textSecondary\" component=\"p\">\n\t\t\t\tEnter processes below:\n\t\t\t</Typography>\n\t\t\t<Formik\n\t\t\t\tinitialValues={initialInputField}\n\t\t\t\tonSubmit={(data) => handleSubmitForm(data)}\n\t\t\t\tvalidationSchema={validationSchema}\n\t\t\t>\n\t\t\t\t{({ values, handleSubmit, isSubmitting }) => (\n\t\t\t\t\t<Form onSubmit={handleSubmit}>\n\t\t\t\t\t\t<div className = {classes.root}>\n\t\t\t\t\t\t\t<Field name=\"quantumValue\" component={Input} label = \"Quantum\"/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<FieldArray name=\"processes\" >\n\t\t\t\t\t\t\t{({ push, remove }) => (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\tpush({\n\t\t\t\t\t\t\t\t\t\t\t\tprocess: \"\",\n\t\t\t\t\t\t\t\t\t\t\t\tburstTime: \"\",\n\t\t\t\t\t\t\t\t\t\t\t\tarrivalTime: \"\",\n\t\t\t\t\t\t\t\t\t\t\t\tpriority: \"0\",\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tclassName={classes.generateButton}\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t// disabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tAdd Process\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t<div className={classes.root}>\n\t\t\t\t\t\t\t\t\t\t{map(values.processes, (data, index: number) => {\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<div key={index} className={classes.formContainer}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h2>P{index}: </h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Burst Time\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={`processes[${index}].burstTime`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={Input}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Arrival Time\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={`processes[${index}].arrivalTime`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={Input}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Priority\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={`processes[${index}].priority`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={Input}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton onClick={() => remove(index)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RemoveIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</FieldArray>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName={classes.generateButton}\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t// disabled={isSubmitting}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tGenerate\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</Container>\n\t);\n};\n\nexport default Forms;\n"]},"metadata":{},"sourceType":"module"}